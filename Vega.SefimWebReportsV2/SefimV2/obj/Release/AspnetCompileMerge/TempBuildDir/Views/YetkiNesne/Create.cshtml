@model SefimV2.ViewModels.YetkiNesneViewModel.YetkiNesneViewModel

@{
    var uygulamaTipi = ViewBag.UygulamaTipi;
    if (uygulamaTipi == "sp")
    {
        Layout = "~/Views/Shared/_LayoutPageSPos.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_LayoutPage.cshtml";
    }
}

<link href="~/Content/ContentSefPanel/css/costomfieldset/customfielset.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "")

    <div class="form-horizontal">
        <fieldset class="well the-fieldset margin-bottom-5 padding-bottom-10 padding-top-10">
            <legend class="the-legend"> Yetki Tanımlama </legend>
            <div class="form-group">
                <div class=" control-label col-md-2">
                    @Html.DisplayNameFor(model => model.YetkiAdi)
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.YetkiAdi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.YetkiAdi, "", new { @class = "text-danger" })
                </div>
                <div class="control-label col-md-2">
                    @Html.DisplayNameFor(model => model.Aciklama)
                </div>
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </fieldset>
        <fieldset class="well the-fieldset margin-bottom-5 padding-bottom-10 padding-top-10">
            <legend class="the-legend"> Menu ve İşlem Tipleri </legend>
            <div class="form-group text-align-center padding-bottom-15">
                <a class='btn btn-danger' href="@Url.Action("List", "YetkiNesne",new {ut=uygulamaTipi})"> Vazgeç</a>
                <input type="submit" value="Kaydet" class="btn btn-m btn-success" />
            </div>
            <div class="form-group">
                <div class=" col-md-1 form-group text-align-center padding-bottom-15">
                    <input class="pull-lef" type="checkbox" id="hepsiniSecPagesName">
                    <span class="pull-lef" style="padding-right: 5px"><b>Tüm Sayfaları Seç / Temizle</b> </span>
                </div>
                <div class="col-md-1 form-group text-align-center padding-bottom-15">
                    <input class="pull-lef" type="checkbox" id="hepsiniSecChild">
                    <span class="pull-lef" style="padding-right: 5px"><b>Tüm İşlemleri Seç / Temizle</b> </span>
                </div>
            </div>
            <div class="form-group padding-top-15" >
                <table id="tableUrun" class="table table-hover table-bordered table-responsive table-condensed">
                    @for (int i = 0; i < Model.YetkiMenuList.Count(); i++)
                    {
                        @Html.HiddenFor(s => Model.YetkiMenuList[i].Id)
                        @Html.HiddenFor(s => Model.YetkiMenuList[i].UstMenuId)
                        @Html.HiddenFor(s => Model.YetkiMenuList[i].YetkiDegeri)

                        if (string.IsNullOrEmpty(Model.YetkiMenuList[i].YetkiDegeri))
                        {
                            <tr >
                                <td style="background-color:#fff7e0; color:black">
                                    @Html.CheckBoxFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu, new { @disabled = "disabled" })

                                    <label for="@Html.NameFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu)" style="font-weight:@((Model.YetkiMenuList[i].YetkiDegeri == string.Empty) ? "bold" : "normal")"> <span class="fa fa-chevron-circle-down"></span> @Model.YetkiMenuList[i].Adi</label>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr id="row_@i">
                                <td >
                                    @*@Html.CheckBoxFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu, new { id = Html.NameFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu) })*@
                                    @{
                                        var attributes = new Dictionary<string, object>();
                                        attributes.Add("id", "CheckPagesName_" + i);
                                        attributes.Add("name", "CheckPagesName_" + i);
                                    }

                                    @Html.CheckBoxFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu, attributes)
                                    <label for="@Html.NameFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu)" style="font-weight:@((Model.YetkiMenuList[i].YetkiDegeri == string.Empty) ? "bold" : "normal")"> @Model.YetkiMenuList[i].Adi</label>
                                </td>

                                @for (int e = 0; e < Model.YetkiMenuList[i].YetkiIslemTipList.Count(); e++)
                                {
                                    if (Model.YetkiMenuList[i].YetkiDegeri != null && !string.IsNullOrEmpty(Model.YetkiMenuList[i].YetkiDegeri))
                                    {
                                        <td>
                                            @Html.HiddenFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].Id)
                                            @Html.HiddenFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].IslemTipi)
                                            @Html.HiddenFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].IslemTipiAdi)

                                            @{
                                                var attributesChild = new Dictionary<string, object>();
                                                attributesChild.Add("id", "CheckChild_" + i);
                                                attributesChild.Add("name", "CheckChild_" + i);
                                            }
                                            @*@Html.CheckBoxFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].CheckedYetkiIslemTip, new { id = Html.NameFor(s => Model.YetkiMenuList[i].CheckedYetkiMenu) })*@
                                            @Html.CheckBoxFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].CheckedYetkiIslemTip, attributesChild)

                                            <label for="@Html.NameFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].CheckedYetkiIslemTip)" style="font-weight:@((Model.YetkiMenuList[i].YetkiIslemTipList[e].CheckedYetkiIslemTip) ? "bold" : "normal")">@Model.YetkiMenuList[i].YetkiIslemTipList[e].IslemTipiAdi</label>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.CheckBoxFor(s => Model.YetkiMenuList[i].YetkiIslemTipList[e].CheckedYetkiIslemTip, new { @disabled = "disabled" })
                                            <label>.</label>
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    }
                </table>
            </div>
        </fieldset>
    </div>
}

<script type="text/javascript">

    $('#hepsiniSecPagesName').click(function () {
        $.each($('#tableUrun tr'), function () {
            var id = this.id.replace('row_', '');
            if ($('#hepsiniSecPagesName')[0].checked) {
                if (id) {
                    $('#CheckPagesName_' + id)[0].checked = true;
                    $('#CheckPagesName_' + id).trigger("change");
                }
            } else {
                if (id) {
                    $('#CheckPagesName_' + id)[0].checked = false;
                    $('#CheckPagesName_' + id).trigger("change");
                }
            }
        });
    })

    $('#hepsiniSecChild').click(function () {
        $.each($('#tableUrun tr'), function () {
            var id = this.id.replace('row_', '');
            if ($('#hepsiniSecChild')[0].checked) {
                if (id) {
                    $('#CheckChild_' + id)[0].checked = true;
                    $('#CheckChild_' + id).trigger("change");
                }
            } else {
                if (id) {
                    $('#CheckChild_' + id)[0].checked = false;
                    $('#CheckChild_' + id).trigger("change");
                }
            }
        });
    })

</script>