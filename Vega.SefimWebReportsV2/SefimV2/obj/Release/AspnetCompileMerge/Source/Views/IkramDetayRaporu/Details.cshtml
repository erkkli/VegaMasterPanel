@model IEnumerable<SefimV2.ViewModels.IskontoDetayRaporuViewModel.IkramDetayRaporuViewModel>

@{
    decimal TotalTutar = 0;
}


<div class="table-responsive table-responsive-lg">
    <table id="tableDetay" class="table datatable table-bordered table table-condensed">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.IkramTarihi)</th>
                <th>@Html.DisplayNameFor(model => model.MasaNo)</th>
                <th>@Html.DisplayNameFor(model => model.Personel)</th>
                <th>@Html.DisplayNameFor(model => model.UrunAdi)</th>
                <th>@Html.DisplayNameFor(model => model.IkramAciklamasi)</th>
                <th>@Html.DisplayNameFor(model => model.IkramTutari)</th>
            </tr>
        </thead>
        <tbody>
            @{
                try
                {
                    foreach (var row in Model)
                    {

                        TotalTutar += row.IkramTutari;

                        <tr id="row_@row.SubeId" style="color:#000000;font-weight:bold; ">
                            <td>@row.IkramTarihi</td>
                            <td>@row.MasaNo </td>
                            <td>@row.Personel</td>
                            <td>@row.UrunAdi</td>
                            <td>@row.IkramAciklamasi</td>
                            <td> @decimal.Round(row.IkramTutari, 2, MidpointRounding.AwayFromZero) </td>
                        </tr>
                    }
                }
                catch (Exception)
                { }
            }

        </tbody>
        <tfoot>
            <tr class="total" style=" background-color:#337ab7;color:#ffffff; font-weight:bold ">
                <td>TOPLAM</td>
                <td></td>
                <td></td>
                <td></td>
                <td> </td>
                <td style="text-align:right"> @decimal.Round(TotalTutar, 2, MidpointRounding.AwayFromZero)  </td>
            </tr>
        </tfoot>

    </table>
</div>

<script type="text/javascript">
    $(document).ready(function () {


        var buttonCommon = {
            exportOptions: {
                format: {
                    body: function (data, row, column, node) {
                        var ank = data.lastIndexOf('>');
                        return data.replace(/[$,.]/g, '.').substring(data.length - (data.length - parseInt(ank) - 1), data.length)
                        data;
                    }
                }
            }
        };

        $('#tableDetay').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },
                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,

            //buttons: [
            //    'copy', 'excel', 'pdf', 'print'
            //],
            ////responsive: true
            buttons: [
                $.extend(true, {}, buttonCommon, {
                    extend: 'copyHtml5'
                }),
                $.extend(true, {}, buttonCommon, {
                    extend: 'excelHtml5'
                }),
                $.extend(true, {}, buttonCommon, {
                    extend: 'pdfHtml5'
                }),
                //$.extend(true, {}, buttonCommon, {
                //    extend: 'printHtml5'
                //})
                'print'
            ],
        });
    });
</script>

<script type="text/javascript">

    jQuery(document).ready(function () {
        //
        var days = 31; // Days you want to subtract
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputDefault = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var days = 7; // haftalık
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputHaftalik = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var days = 31; // aylık
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputAylik = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var d = new Date(); // endDate
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var hours = d.getHours();
        var minut = d.getMinutes();
        var second = d.getSeconds();
        var output = d.getFullYear() + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;
       //Veri Getir butonu click durumu
        $(document).on("click", "#btnEpostasaveDetail", function (e) {

            var StartDate = '@ViewBag.StartDateTime'; //localStorage.tarihBaslangic;//$("#dateGecerlilikTarihi").val() + ' ' + $("#basSaat").val();
            var EndDate ='@ViewBag.EndDateTime ' ;//localStorage.tarihBitis;//$("#dateBitisTarihi").val() + ' ' + $("#bitisSaat").val();
            var ePostaAdress = $('#ePostaAdress').val();
            var Pages = '@(ViewBag.Pages)';
            var SubeId = '@(ViewBag.SubeId)';

            SendReportMailDetail(StartDate, EndDate, ePostaAdress, Pages, SubeId);
        });

        function SendReportMailDetail(StartDate, EndDate, ePostaAdress, Pages, SubeId) {
            document.getElementById("loading").setAttribute("class", "myloading-active");
            document.getElementById("contbody").setAttribute("style", "position:fixed;");
            $.ajax({
                url: '/UrunGrubu/SendReportMailDetail?StartDate=' + StartDate + '&EndDate=' + EndDate + '&ePostaAdress=' + ePostaAdress + '&Pages=' + Pages + '&SubeId=' + SubeId + '',
                type: 'GET',
                beforeSend: function (request) {
                    //mApp.blockPage();
                },
                complete: function () {
                    window.setTimeout(function () {
                        //mApp.unblockPage();
                    }, 100);
                },
                dataType: 'json',
                success: function (data) {
                    var resultObj = JSON.parse(JSON.stringify(data));
                    SuccessAlert(resultObj.UserMessage);
                    //console.log(data);
                    setTimeout(function () {
                        parent.location = "@Url.Action("List", "UrunGrubu")";
                        //window.location.reload();
                    }, 500);
                }
            });
        }
    });
</script>

