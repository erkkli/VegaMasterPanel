@model SefimV2.ViewModels.SPosVeriGonderimi.UrunEditViewModel

<div class="m-content">
    <div class="row" style="margin:10px">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <div id="notification"></div>
                </div>
            </div>
            <div class="m-portlet">
                <fieldset class="well the-fieldset margin-bottom-5 padding-bottom-10 padding-top-10" @*style="background-color:#f3f3f3"*@>
                    <legend class="the-legend">Choice(1)</legend>
                    @using (Html.BeginForm("Choice1Edit", "SefimPanelVeriGonderimi", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary()
                        @Html.HiddenFor(Model => Model.SubeId)

                        <div class="m-portlet__body">
                            @if (Model.UrunEditList != null && Model.UrunEditList.Count > 0)
                            {
                                <table id="tableChoice1" class="table table-hover table-bordered table-condensed">
                                    <thead>
                                        <tr style="background: #fffaf0; color:black">
                                            <th>İşlem</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ProductGroup)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ProductName)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().Price)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ChoiceProductName)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ChoicePrice)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.UrunEditList != null && Model.UrunEditList.Count > 0)
                                            {
                                                for (int i = 0; i < Model.UrunEditList.ToList().OrderBy(x => x.ProductName).Count(); i++)
                                                {
                                                    @Html.HiddenFor(m => Model.UrunEditList[i].Id)
                                                    @Html.HiddenFor(m => Model.UrunEditList[i].Choice1Id)
                                                    @Html.HiddenFor(m => Model.UrunEditList[i].ProductName)
                                                    @Html.HiddenFor(m => Model.UrunEditList[i].ProductGroup)
                                                    @Html.HiddenFor(m => Model.UrunEditList[i].ChoiceProductName)

                                                    <tr>
                                                        <td hideExcel="false">
                                                            <img class=' btn btn-success' data-url="@Url.Action("Choice2Edit", "SefimPanelVeriGonderimi", new { subeId = Model.SubeId,  productId = Model.UrunEditList[i].Id, Choice1Id = Model.UrunEditList[i].Choice1Id  })" src="~/img/details_open.jpg" rel=@Model.SubeId alt="expand/collapse">
                                                        </td>
                                                        <td> @Model.UrunEditList[i].ProductGroup </td>
                                                        <td> @Model.UrunEditList[i].ProductName  </td>
                                                        <td> @Model.UrunEditList[i].Price </td>
                                                        <td> @Model.UrunEditList[i].ChoiceProductName </td>
                                                        <td> @Html.EditorFor(m => Model.UrunEditList[i].ChoicePrice, new { htmlAttributes = new { @id = Model.UrunEditList[i].Choice1Id, @class = "form-control", data_val = "true", data_val_required = "Ürün Fiyatı boş bırakılamaz" } }) </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="alert alert-warning no-margin">Choice(1) tarihçe kaydı bulunmamaktadır.</div>
                            }
                        </div>
                    }
                </fieldset>
                <fieldset class="well the-fieldset margin-bottom-5 padding-bottom-10 padding-top-10 style-2">
                    <legend class="the-legend">Options(Seçenekler)</legend>

                    @using (Html.BeginForm("OptionsEdit", "SefimPanelVeriGonderimi", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary()
                        @Html.HiddenFor(Model => Model.SubeId)

                        <div class="m-portlet__body">
                            @if (Model.UrunOptionsEditList != null && Model.UrunOptionsEditList.Count > 0)
                            {
                                <table id="tableOptions" class="table table-hover table-bordered table-condensed">
                                    <thead>
                                        <tr style="background: #fffaf0; color:black">
                                            <th>@Html.DisplayNameFor(m => m.UrunOptionsEditList.First().ProductGroup)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunOptionsEditList.First().ProductName)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunOptionsEditList.First().Price)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunOptionsEditList.First().OptionsProductName)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunOptionsEditList.First().OptionsPrice)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.UrunOptionsEditList != null && Model.UrunOptionsEditList.Count > 0)
                                            {
                                                for (int i = 0; i < Model.UrunOptionsEditList.ToList().OrderBy(x => x.ProductName).Count(); i++)
                                                {
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].Id)
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].OptionsId)
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].ProductName)
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].ProductGroup)
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].OptionsProductName)
                                                    @Html.HiddenFor(m => Model.UrunOptionsEditList[i].OptionsCategory)
                                                    <tr>
                                                        <td> @Model.UrunOptionsEditList[i].ProductGroup </td>
                                                        <td> @Model.UrunOptionsEditList[i].ProductName  </td>
                                                        <td> @Model.UrunOptionsEditList[i].Price </td>
                                                        <td> @Model.UrunOptionsEditList[i].OptionsProductName </td>
                                                        <td> @Html.EditorFor(m => Model.UrunOptionsEditList[i].OptionsPrice, new { htmlAttributes = new { @id = Model.UrunOptionsEditList[i].OptionsId, @class = "form-control", data_val = "true", data_val_required = "Ürün Fiyatı boş bırakılamaz" } }) </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="alert alert-warning no-margin">Options(Seçenekler) tarihçe kaydı bulunmamaktadır.</div>
                            }
                        </div>
                    }
                </fieldset>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function () {

        // $('#tableChoice1').DataTable({
        // "pageLength": 100,
        // "bDestroy": true,
        // });

        //$('#tableOptions').DataTable({
        // "pageLength": 100,
        // "bDestroy": true,
        // });


        $('#tableChoice1 tbody td img').click(function () {
            debugger;
            var oTable = $('#tableChoice1').dataTable();


            var nTr = this.parentNode.parentNode;
            if (this.src.match('details_close')) {
                /* This row is already open - close it */
                this.src = "/img/details_open.jpg";
                oTable.fnClose(nTr);
            }
            else {
                /* Open this row */
                this.src = "/img/details_close.jpg";
                var subeid = $(this).attr("rel");
                localStorage.subeid = subeid;
                var dataurl = $(this).data("url");
                $.get(dataurl, function (details) {
                    oTable.fnOpen(nTr, details, 'details');
                });
            }
        });

    });

</script>


