@model SefimV2.ViewModels.SPosKabulIslemleri.BelgeList
@{
    Layout = "~/Views/Shared/_LayoutPageSPos.cshtml";
}

<link href="/Assets/css/bootstrap.css" rel="stylesheet" />
<link href="/Assets/css/custom.css" rel="stylesheet" />
<link href="/Assets/plugins/fUpload/Uploader-style.css" rel="stylesheet" />


<div class="col-sm-2">
    <div class="col-sm-12"><label>Başlangıç Tarihi</label></div>
    <input type="date" value="@Model.BaslangicTarihi" class="form-control has-feedback-left" id="BaslangicTarihi" placeholder="Seçiniz">
</div>
<div class="col-sm-2">
    <div class="col-sm-12"><label>Bitiş Tarihi</label></div>
    <input type="date" value="@Model.BitisTarihi" class="form-control has-feedback-left" id="BitisTarihi" placeholder="Seçiniz">
</div>
<div class="col-sm-1">
    <div class="col-sm-12"><label>Belge Tipi</label></div>
    @Html.EnumDropDownListFor(model => model.BelgeTipi, new { @id = "BelgeTipi" })
</div>
<div class="col-sm-1">
    <div class="col-sm-12"><label>Şube</label></div>
    @Html.DropDownListFor(model => model.Sube, new List<SelectListItem>(), new { @id = "Sube", @class = "form-control m-select2" })
</div>
<div class="col-sm-1">
    <div class="col-sm-12"><label></label></div>
    <button id="Filitrele" class="btn btn-primary">Filtrele</button>
</div>


<table id="tblCustomers" class="table table-hover table-bordered table-condensed">
    <thead>
        <tr>
            <th style="width:100px">İşlemler</th>
            <th style="width:150px">Tarih</th>
            <th style="width:150px">Belge No</th>
            <th style="width:60px">Belge Kod</th>
            <th style="width:60px">Belge Tip</th>
            @*<th style="width:60px">Kdv</th>*@
            <th style="width:60px">Tutar</th>
            <th style="width:20px">Şube</th>

        </tr>
    </thead>
    <tbody id="tblCustomersObject">
        @{
            if (@Model != null)
            {
                for (int i = 0; i < @Model.Belgeler.Count(); i++)
                {
                    <tr id="@Model.Belgeler[i].Id">
                        <td>
                            <a class="btn btn-success" onclick="lib.onayla(@Model.Belgeler[i].Id)" title="Onayla">
                                Onayla
                            </a>

                            <a class="btn btn-danger" onclick="lib.ret(@Model.Belgeler[i].Id)" title="Sil">
                                Ret
                            </a>

                            <a class="btn btn-warning" href="/SefimPanelBelgeIslemleri/AlisBelgesiCreate?ID=@Model.Belgeler[i].Id&Page=/SefimPanelBelgeIslemleri/OnayBekleyenBelgeList" title="Şubedeki ürün bilgilerini görüntüle">
                                Düzenle
                            </a>
                        </td>
                        <td class="CustomerId">
                            <span>@Model.Belgeler[i].Tarih.Value.ToString("dd.MM.yyyy")</span>
                        </td>
                        <td class="CustomerId">
                            @if (!string.IsNullOrEmpty( @Model.Belgeler[i].BelgeNoArctos))
                            {
                                <span>@Model.Belgeler[i].BelgeNoArctos</span>
                            }
                            else
                            {
                                <span>@Model.Belgeler[i].BelgeNo</span>
                            }

                        </td>
                        <td class="CustomerId">
                            <span>@Model.Belgeler[i].BelgeKod</span>
                        </td>
                        <td class="CustomerId">
                            <span>@Model.Belgeler[i].BelgeTip</span>
                        </td>
                        @*<td class="CustomerId">
                            <span>@Model.Belgeler[i].BelgeKDV</span>
                        </td>*@
                        <td class="CustomerId">
                            <span>@Model.Belgeler[i].BelgeTutar</span>
                        </td>
                        <td class="CustomerId">
                            <span>@Model.Belgeler[i].Sube</span>
                        </td>

                    </tr>
                }
            }

        }
    </tbody>
</table>
<script src="/Assets/js/jquery.js"></script>
<script src="/Assets/plugins/fUpload/jquery.blockUI.js"></script>
<script src="/Assets/js/bootstrap.js"></script>


<script type="text/javascript">


    $('#Filitrele').click(function () {
        var baslangictarihi =$('#BaslangicTarihi').val();
        var bitistarihi = $('#BitisTarihi').val();
        var belgetipi = $('#BelgeTipi').val();
        var sube = $('#Sube').val();

        location.search = "?baslangictarihi=" + baslangictarihi + "&bitistarihi=" + bitistarihi + "&belgetipi=" + belgetipi + "&sube=" + sube;
    })

    $(document).ready(function () {
        $("#Sube").select2();
        $('#BelgeTipi').select2();
        SubeList();
        $('#tblCustomers').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },

                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,
            buttons: [
                'copy', 'excel', 'pdf', 'print'
            ],
            //responsive: true
        });
    });
    var lib = {};
    lib.ret = function (Id) {
        if (confirm("Belgeyi ret etmek istiyor musunuz?")) {
            $.ajax({
                url: '/SefimPanelBelgeIslemleri/AlisBelgesiRet',
                type: 'POST',
                data: { BelgeId: Id },
                beforeSend: function (request) {
                    //mApp.blockPage();
                },
                complete: function () {
                    window.setTimeout(function () {
                        //mApp.unblockPage();
                    }, 100);
                },
                dataType: 'json',
                success: function (data) {
                    $("#" + Id).remove();
                },
                error: function (err) {
                    alert(error.UserMessage)
                }
            });

        } else {

        }

    }
    lib.onayla = function (Id) {
        if (confirm("Belgeyi onaylamak istiyor musunuz?")) {
            $.ajax({
                url: '/SefimPanelBelgeIslemleri/AlisBelgesiOnay',
                type: 'POST',
                data: { BelgeId: Id },
                beforeSend: function (request) {
                    //mApp.blockPage();
                },
                complete: function () {
                    window.setTimeout(function () {
                        //mApp.unblockPage();
                    }, 100);
                },
                dataType: 'json',
                success: function (data) {
                    if (data.IsSuccess) {
                        alert("Onaylama başarılı.");
                        $("#" + Id).remove();
                    }
                    else {
                        alert("Bilgi eklenemedi." + data.UserMessage);
                    }

                },
                error: function (err) {
                    alert(error.UserMessage)
                }
            });
        } else {

        }

    }
    function SubeList() {
        $.ajax({
            url: '/SefimPanelBelgeIslemleri/SubeListJson',
            type: 'POST',
            beforeSend: function (request) {
                //mApp.blockPage();
            },
            complete: function () {
                window.setTimeout(function () {
                    //mApp.unblockPage();
                }, 100);
            },
            dataType: 'json',
            success: function (data) {
                var options = $('#Sube');
                $('option', options).remove();
                 options.append($('<option />').val(0).text(""));
                $.each(data, function () {
                    options.append($('<option />').val(this.Value).text(this.Text));
                });
                if ('@Model.Sube') {
                     $('#Sube').val('@Model.Sube').trigger('change');
                }
                @*console.log('@Model.Sube', user.SubeID)
                if ('@Model.Sube') {
                    $('#Sube').val('@Model.Sube').trigger('change');
                } else {
                    if (user.SubeID) {
                        $('#Sube').val(user.SubeID).trigger('change');
                    }
                }
                lib.documentReadyStatusList.Sube = true;*@
            }
        });
    }
</script>
