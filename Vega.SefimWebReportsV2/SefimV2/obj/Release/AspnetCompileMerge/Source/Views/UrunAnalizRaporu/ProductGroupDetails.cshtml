
@model IEnumerable<SefimV2.ViewModels.UrunAnalizRaporu.UrunAnalizRaporuViewModel>

@{
    Layout = null;
    var urlHelper = new UrlHelper(Html.ViewContext.RequestContext);
    string baseUrl = urlHelper.Content("~");
}

@*<button type="button" class="btn btn-success" id="btnExport" onclick="fnExcelReport();" style="float: right;"><i class="fa fa-file-excel-o"></i> - Excel</button>*@
@*<button id="btnRange" class="btn btn-danger fa-pull-right" type="button" data-toggle="modal" data-target="#modalEpostaFormProduct"> <i class="fa fa-mail-forward"></i>E-Posta   </button>*@
<h4 style="text-align:center">Alış - Satış</h4>
<table id="tableProducts" class="table datatable table-bordered" style="background-color:#ff0000">
    <thead>
        <tr style="background-color:#fcf4c8; ">
            <th class="column-title">D.Başı Stok</th>
            <th class="column-title">D.İçi Girenler</th>
            <th class="column-title">Top. Envater</th>
            <th class="column-title">Ort Maliyet</th>
            <th class="column-title">D.İçi Giren Tutar</th>
            <th class="column-title">Top. Envater Tutarı</th>
            <th class="column-title">Satış Miktarı</th>
            <th class="column-title">Satış Tutarı</th>
            <th class="column-title">D.İçi Satış Maliyeti</th>
            <th class="column-title">D.İçi Brüt Kar</th>
        </tr>
    </thead>
    <tbody class="liste">
        @foreach (var item in Model)
        {
            <tr class="link" ; style="color:#000000;font-weight:bold ">
                <td style="text-align:right">@String.Format("{0:0.##}", item.DONBASISTOK)</td>
                <td style="text-align:right"> @String.Format("{0:#,###.00;-#,###.00;0}", item.DONICIGRENLER) </td>
                <td style="text-align:right">@String.Format("{0:0.##}", item.TOPENV)</td>
                <td style="text-align:right"> @String.Format("{0:#,###.00;-#,###.00;0}", item.ORTMALIYET) </td>
                <td style="text-align:right">@String.Format("{0:0.##}", item.DONICIGIRTUTAR)</td>
                <td style="text-align:right"> @String.Format("{0:#,###.00;-#,###.00;0}", item.TOPENVTUTAR) </td>
                <td style="text-align:right">@String.Format("{0:0.##}", item.SATISMIKTAR)</td>
                <td style="text-align:right"> @String.Format("{0:#,###.00;-#,###.00;0}", item.SATISTUTAR) </td>
                <td style="text-align:right">@String.Format("{0:0.##}", item.DONICISATMALIYET)</td>
                <td style="text-align:right"> @String.Format("{0:#,###.00;-#,###.00;0}", item.DONICIBRUTKAR) </td>
            </tr>
        }
    </tbody>
</table>

<div class="row" style="margin-top:15px;">
    <div class="col-md-6 col-sm-6 col-xs-12">
        <div id="PaymentUsersAmount" style="min-width: 310px; height: 400px; margin: 0 auto;"></div>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        @*<div id="PaymentTaypeTotalAmountId" style="min-width: 310px; height: 400px; margin: 0 auto"></div>*@

        <div class="tab-content tableFixHead">
            <table class="table datatable table-bordered">
                <thead>
                    <tr>
                        <th style="text-align:right">Sayim Dönem</th>
                        <th style="text-align:right">Recete Maliyeti</th>
                        <th style="text-align:right">Gerçekleşen Maliyet</th>
                    </tr>
                </thead>
                <tbody id="divCustomerState"></tbody>
            </table>
        </div>
    </div>
</div>


<div class="row" style="margin-bottom:15px;">
    <h4 style="text-align:center">Şube Satışı</h4>
    <div class="col-md-12 col-sm-6 col-xs-12">
        <div id="PaymentProductsAmount" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
    </div>
</div>


<div class="modal fade" id="modalEpostaFormProduct" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                @* <button type="button" class="close" onclick="ClearModal()" data-dismiss="modal">&times;</button>*@
                <h4 class="modal-title">E-Posta Gönder</h4>
            </div>
            <div class="modal-body">
                <div class="clearfix"></div>
                <div class="form-group" style="margin-top:10px !important;">
                    @*<label class="control-label col-md-3 col-sm-3 col-xs-12">E-Post</label>*@
                    <div class="col-md-9 col-sm-9 col-xs-12">
                        <div class="controls">
                            <div class="form-group m-form__group row  has-feedback ">
                                <label class="col-form-label col-lg-3 col-sm-12">E-Posta </label>
                                <div class="col-lg-9 col-md-9 col-sm-12">
                                    @*<input type="text" name="Name" id="ePostaAdress" />*@
                                    <input type="email" id="ePostaAdress" class="form-control" aria-describedby="emailHelp" placeholder="E Posta Giriniz">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-footer">
                <button id="btnEpostasaveProduct" type="button" class="btnEpostasave btn btn-success" data-id="0"> <i class="fa fa-mail-forward"></i> Gönder</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Kapat</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#table').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },
                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,
            buttons: [
                'copy', 'excel', 'pdf', 'print'
            ],
            //responsive: true
        });
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $('#tableProducts').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },
                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,
            buttons: [
                'copy', 'excel', 'pdf', 'print'
            ],
            //responsive: true
        });
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#tableProducts2').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },
                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,
            buttons: [
                'copy', 'excel', 'pdf', 'print'
            ],
            //responsive: true
        });
    });
</script>


<script type="text/javascript">
    $(document).ready(function () {
        $('#tableSayimDonem').DataTable({
            language: {
                info: "_TOTAL_ kayıttan _START_ - _END_ kayıt gösteriliyor.",
                infoEmpty: "Gösterilecek hiç kayıt yok.",
                loadingRecords: "Kayıtlar yükleniyor.",
                zeroRecords: "Tablo boş",
                search: "Arama:",
                infoFiltered: "(toplam _MAX_ kayıttan filtrelenenler)",
                buttons: {
                    copyTitle: "Panoya kopyalandı.",
                    copySuccess: "Panoya %d satır kopyalandı",
                    copy: "Kopyala",
                    print: "Yazdır",
                },
                paginate: {
                    first: "İlk",
                    previous: "Önceki",
                    next: "Sonraki",
                    last: "Son"
                },
            },
            dom: 'Bfrtip',
            "pageLength": 80,
            "bDestroy": true,
            buttons: [
                'copy', 'excel', 'pdf', 'print'
            ],
            //responsive: true
        });
    });
</script>


<script type="text/javascript">

    jQuery(document).ready(function () {

        ////AYLIK SATIS CHARTS****
        //Highcharts.getOptions().colors = Highcharts.map(Highcharts.getOptions().colors, function (color) {
        //    return {
        //        radialGradient: {
        //            cx: 0.5,
        //            cy: 0.3,
        //            r: 0.7
        //        },
        //        stops: [[0, color], [1, Highcharts.Color(color).brighten(-0.3).get('rgb')] // darken
        //        ]
        //    };
        //});
        //
        var days = 31; // Days you want to subtract
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputDefault = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var days = 7; // haftalık
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputHaftalik = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var days = 31; // aylık
        var date = new Date();
        var last = new Date(date.getTime() - (days * 24 * 60 * 60 * 1000));
        var day = last.getDate();
        var month = last.getMonth() + 1;
        var year = last.getFullYear();
        var outputAylik = year + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        var d = new Date(); // endDate
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var hours = d.getHours();
        var minut = d.getMinutes();
        var second = d.getSeconds();
        var output = d.getFullYear() + '-' +
            (('' + month).length < 2 ? '0' : '') + month + '-' +
            (('' + day).length < 2 ? '0' : '') + day;

        //console.log(day);
        //$('#StartDate').val(outputDefault);
        //$('#EndDate').val(output);

         //Veri Getir butonu click durumu
        $(document).on("click", "#btnEpostasaveProduct", function (e) {

            var StartDate = '@ViewBag.StartDateTime'; //localStorage.tarihBaslangic;//$("#dateGecerlilikTarihi").val() + ' ' + $("#basSaat").val();
            var EndDate = '@ViewBag.EndDateTime ';//localStorage.tarihBitis;//$("#dateBitisTarihi").val() + ' ' + $("#bitisSaat").val();
            var ePostaAdress = $('#ePostaAdress').val();
            var Pages =  '@(ViewBag.Pages)';
            var SubeId = '@(ViewBag.SubeId)';
            var ProductGroup = '@(ViewBag.ProductGroup)';
            SendReportMailProduct(StartDate, EndDate, ePostaAdress, Pages, SubeId, ProductGroup);
            //console.log(StartDate);
            //console.log(ePostaAdress);
        });

        //console.log(StartDate);
        function SendReportMailProduct(StartDate, EndDate, ePostaAdress, Pages, SubeId, ProductGroup) {

            document.getElementById("loading").setAttribute("class", "myloading-active");
            document.getElementById("contbody").setAttribute("style", "position:fixed;");
            $.ajax({
                url: '/UrunGrubu/SendReportMailProduct?StartDate=' + StartDate + '&EndDate=' + EndDate + '&ePostaAdress=' + ePostaAdress + '&Pages=' + Pages + '&SubeId=' + SubeId + '&ProductGroup=' + ProductGroup + '',
                type: 'GET',
                beforeSend: function (request) {
                    //mApp.blockPage();
                },
                complete: function () {
                    window.setTimeout(function () {
                        //mApp.unblockPage();
                    }, 100);
                },
                dataType: 'json',
                success: function (data) {
                    var resultObj = JSON.parse(JSON.stringify(data));
                    SuccessAlert(resultObj.UserMessage);

                    ////console.log(data);

                    setTimeout(function () {
                        @*parent.location = "@Url.Action("List", "CiroRaporlar")";*@
                        window.location.reload();
                    }, 500);
                }
            });
        }


           var StartDate = '@ViewBag.StartDateTime';
           var EndDate = '@ViewBag.EndDateTime ';
           var ProductGroup = '@(ViewBag.ProductGroup)';
        console.log('b-start', StartDate);
        console.log('b-ProductGroup', ProductGroup);

        @* ÖDEME TİPLERİNE GÖRE CİRO DAĞILIMI *@ //HigtCharts_2 ****
        /*
        var PaymentTaypeTotalAmount = new Highcharts.chart('PaymentTaypeTotalAmountId', {
            chart: {
                type: 'line'
            },
            title: {
                text: 'Sayim Donem'
            },
            xAxis: {
                categories: []
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Toplam '
                },
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            legend: {
                align: 'right',
                x: -30,
                verticalAlign: 'top',
                y: 25,
                floating: true,
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            tooltip: {
                headerFormat: '<b>{point.x}</b><br/>',
                pointFormat: '{series.name}: {point.y}<br/>Toplam: {point.stackTotal}'
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: false,
                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                    }
                }
            },
            series: []
        });

        $.PaymentTaypeTotalAmount = function (StartDate, EndDate, ProductGroup) {
            //console.log(data + ' dept_adı ' + DEPT_ADI + ' Dept_ıd ' + DEPT_ID);
            var DataUrl = '/UrunAnalizRaporu/PaymentTaypeTotalAmount?StartDateTime=' + StartDate + '&EndDateTime=' + EndDate + '&ProductGroup=' + ProductGroup + '';
            $.ajax
                ({
                    url: DataUrl,
                    type: 'GET',
                    dataType: 'json',
                    beforeSend: function (request) {
                        //App.blockUI({ boxed: true });
                    },
                    complete: function () {
                        //window.setTimeout(function () { App.unblockUI(); }, 1000);
                    },
                    success: function (data) {

                        PaymentTaypeTotalAmount.xAxis[0].setCategories(data.Categories, true, true);
                        //console.log('GELEN DATA ' + data.Categories);
                        while (PaymentTaypeTotalAmount.series.length > 0)
                            PaymentTaypeTotalAmount.series[0].remove(true);

                        $(data.Name).each(function (index, value) {

                            PaymentTaypeTotalAmount.addSeries({
                                name: value,
                                data: []
                            });
                        });
                        $(data.Name).each(function (index, value) {
                            PaymentTaypeTotalAmount.series[index].setData(data.Data[value]);
                        });
                        //CostDayOrders.series[0].setName(data.Name);
                    }
                });
        }

        $.PaymentTaypeTotalAmount(StartDate, EndDate, ProductGroup);
        //HigtCharts_2_END****
   */

        @* PERSONELE GORE SATIS DAĞILIMI *@ //HigtCharts_2 ****
        var PaymentUsersAmount = new Highcharts.chart('PaymentUsersAmount', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Personel Satis'
            },
            xAxis: {
                categories: []
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Toplam '
                },
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            legend: {
                align: 'right',
                x: -30,
                verticalAlign: 'top',
                y: 25,
                floating: true,
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            tooltip: {
                headerFormat: '<b>{point.x}</b><br/>',
                pointFormat: '{series.name}: {point.y}<br/>Toplam: {point.stackTotal}'
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: false,
                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                    }
                }
            },
            series: []
        });

        $.PaymentUsersAmount = function (StartDate, EndDate, ProductGroup) {
            //console.log(data + ' dept_adı ' + DEPT_ADI + ' Dept_ıd ' + DEPT_ID);
            var DataUrl = '/UrunAnalizRaporu/PaymentUsersAmount?StartDateTime=' + StartDate + '&EndDateTime=' + EndDate + '&ProductGroup=' + ProductGroup + '';
            $.ajax
                ({
                    url: DataUrl,
                    type: 'GET',
                    dataType: 'json',
                    beforeSend: function (request) {
                        //App.blockUI({ boxed: true });
                    },
                    complete: function () {
                        //window.setTimeout(function () { App.unblockUI(); }, 1000);
                    },
                    success: function (data) {

                        PaymentUsersAmount.xAxis[0].setCategories(data.Categories, true, true);
                        //console.log('GELEN DATA ' + data.Categories);
                        while (PaymentUsersAmount.series.length > 0)
                            PaymentUsersAmount.series[0].remove(true);

                        $(data.Name).each(function (index, value) {

                            PaymentUsersAmount.addSeries({
                                name: value,
                                data: []
                            });
                        });
                        $(data.Name).each(function (index, value) {
                            PaymentUsersAmount.series[index].setData(data.Data[value]);
                        });
                        //CostDayOrders.series[0].setName(data.Name);
                    }
                });
        }

        $.PaymentUsersAmount(StartDate, EndDate, ProductGroup);
        //HigtCharts_2_END****


        @* ŞUBEYE  GORE SATIS DAĞILIMI *@ //HigtCharts_2 ****
        var PaymentProductsAmount = new Highcharts.chart('PaymentProductsAmount', {
            chart: {
                type: 'bar'
            },
            title: {
                text: 'Sube Satis'
            },
            xAxis: {
                categories: []
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Toplam '
                },
                stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                    }
                }
            },
            legend: {
                align: 'right',
                x: -30,
                verticalAlign: 'top',
                y: 25,
                floating: true,
                backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                borderColor: '#CCC',
                borderWidth: 1,
                shadow: false
            },
            tooltip: {
                headerFormat: '<b>{point.x}</b><br/>',
                pointFormat: '{series.name}: {point.y}<br/>Toplam: {point.stackTotal}'
            },

            plotOptions: {
                column: {
                    stacking: 'normal',
                    dataLabels: {
                        enabled: false,
                        color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'
                    }
                }
            },
            series: []
        });

        $.PaymentProductsAmount = function (StartDate, EndDate, ProductGroup) {
            //console.log(data + ' dept_adı ' + DEPT_ADI + ' Dept_ıd ' + DEPT_ID);
            var DataUrl = '/UrunAnalizRaporu/PaymentProductsAmount?StartDateTime=' + StartDate + '&EndDateTime=' + EndDate + '&ProductGroup=' + ProductGroup + '';
            $.ajax
                ({
                    url: DataUrl,
                    type: 'GET',
                    dataType: 'json',
                    beforeSend: function (request) {
                        //App.blockUI({ boxed: true });
                    },
                    complete: function () {
                        //window.setTimeout(function () { App.unblockUI(); }, 1000);
                    },
                    success: function (data) {

                        PaymentProductsAmount.xAxis[0].setCategories(data.Categories, true, true);
                        //console.log('GELEN DATA ' + data.Categories);
                        while (PaymentProductsAmount.series.length > 0)
                            PaymentProductsAmount.series[0].remove(true);

                        $(data.Name).each(function (index, value) {

                            PaymentProductsAmount.addSeries({
                                name: value,
                                data: []
                            });
                        });
                        $(data.Name).each(function (index, value) {
                            PaymentProductsAmount.series[index].setData(data.Data[value]);
                        });
                        //CostDayOrders.series[0].setName(data.Name);
                    }
                });
        }

        $.PaymentProductsAmount(StartDate, EndDate, ProductGroup);
        //HigtCharts_2_END****
    });
</script>




<script type="text/javascript">

    jQuery(document).ready(function () {
           var StartDate = '@ViewBag.StartDateTime';
           var EndDate = '@ViewBag.EndDateTime ';
           var ProductGroup = '@(ViewBag.ProductGroup)';
            console.log('b-start', StartDate);
            console.log('b-ProductGroup', ProductGroup);

        function CustomerState(StartDate, EndDate, ProductGroup) {
            $.ajax({
                url: '/UrunAnalizRaporu/CustomerState?StartDateTime=' + StartDate + '&EndDateTime=' + EndDate + '&ProductGroup=' + ProductGroup + '',
                type: 'GET',
                beforeSend: function (request) {
                    //mApp.blockPage();
                },
                complete: function () {
                    window.setTimeout(function () {
                        //mApp.unblockPage();
                    }, 100);
                },
                dataType: 'json',
                success: function (result) {

                    var addRow = '';
                    $.each(result.Data, function (index, value) {

                        if (value.SayimDonemi != null) {
                        addRow += '<tr>'
                            //+ '<td scope="row"><img src= "../Customers/ProfileImage?id=' + value.CUSTOMER_ID + '" alt= "' + value.ADI_SOYADI + '" style="max-height:35px;"/></td>'
                            //+ '<td>'+ value.ADI_SOYADI + ' ' + value.DIGER2 + '</td>'
                            //+ '<td class="txt-center"><a href="javascript:void(0)" onclick="openCustomerHomeModal(' + value.CUSTOMER_ID + ')" class="btn btn-primary btn-sm m-btn  m-btn m-btn--icon" title="Müşteri Bilgi"><i class="fa fa-info-circle"></i>&nbsp; Bilgi </a></td>'
                            + '<td class="CostInfo txt-center" style="text-align:right">' + value.SayimDonemi  + '</td>'
                            + '<td class="CostInfo txt-center" style="text-align:right">' + value.ReceteMaliyeti + '</td>'
                            + '<td class="CostInfo txt-center" style="text-align:right">' + value.GerceklesenMaliyet + '</td>'
                                + '</tr>';
                        }
                    });

                    var DateRange = "( " + result.StartDate + " / " + result.EndDate + " )";
                    //$("#CustomerDateRange").html('').append(DateRange);
                    //$("#divCustomerState").html('');
                    //$("#CustomerState_" + Limit).addClass("LimitGroupBack");
                    $("#divCustomerState").append(addRow);
                }
            });
        }
        CustomerState(StartDate, EndDate, ProductGroup);
    });
</script>


