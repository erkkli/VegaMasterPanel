@model SefimV2.ViewModels.SPosVeriGonderimi.UrunEditViewModel

@{
    Layout = "~/Views/Shared/_LayoutPageSPosPart.cshtml";
    var urlHelper = new UrlHelper(Html.ViewContext.RequestContext);
    string baseUrl = urlHelper.Content("~");
}

<div class="m-content">
    <div class="row" style="margin:10px">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <div id="notification"></div>
                </div>
            </div>
            <div class="m-portlet">
                <fieldset class="well the-fieldset margin-bottom-5 padding-bottom-10 padding-top-10">
                    <legend class="the-legend">Seçim-2</legend>

                    @using (Html.BeginForm("SablonChoice2EditForSubeList", "SefimPanelSablonGuncelle", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary()
                        @Html.HiddenFor(Model => Model.SubeId)

                        <div class="m-portlet__body">
                            @if (Model.productCompairsList != null && Model.productCompairsList.Count > 0)
                            {
                                <table id="tableChoice2" class="table table-hover table-bordered table-condensed">
                                    <thead>
                                        <tr style="background: #fffaf0; color:black">
                                            @*<th>İşlem</th>*@
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ProductGroup)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ProductName)</th>
                                            <th>@Html.DisplayNameFor(m => m.UrunEditList.First().ChoiceProductName)</th>

                                            @for (int i = 0; i < Model.SubeList.Count; i++)
                                            {
                                                <th hideExcel="true">  @Model.SubeList[i].SubeAdi </th>
                                                @Html.HiddenFor(m => Model.SubeList[i].SubeAdi)
                                                @Html.HiddenFor(m => Model.SubeList[i].SubeId)
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            if (Model.productCompairsList != null && Model.productCompairsList.Count > 0)
                                            {
                                                for (int i = 0; i < Model.productCompairsList.ToList().OrderBy(x => x.ProductName).Count(); i++)
                                                {
                                                    @*Yeni eklenen kayıt mı?*@
                                                    var isManuelInsert = Model.productCompairsList[i].IsManuelInsert;
                                                    var bColorCode = string.Empty;
                                                    if (isManuelInsert == "True")
                                                    {
                                                        bColorCode = "#F4BFBF";
                                                    }
                                                    <tr style="background-color:@bColorCode; font-weight:bold;">
                                                        <td>
                                                            @Model.productCompairsList[i].ProductGroup

                                                            @Html.HiddenFor(m => Model.productCompairsList[i].Id)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].ProductId)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].Choice1Id)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].Choice2Id)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].ProductName)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].ProductGroup)
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].ChoiceProductName)
                                                        </td>
                                                        <td> @Model.productCompairsList[i].ProductName  </td>
                                                        <td> @Model.productCompairsList[i].ChoiceProductName </td>

                                                        @for (int a = 0; a < Model.SubeList.Count; a++)
                                                        {
                                                            var price = Model.productCompairsList[i].SubeList.Where(y => y.SubeId == Model.SubeList[a].SubeId).FirstOrDefault();
                                                            var priceIndex = Model.productCompairsList[i].SubeList.IndexOf(price);
                                                            @Html.HiddenFor(m => Model.productCompairsList[i].SubeList[priceIndex].SubeId)

                                                            if (Model.productCompairsList[i].SubeList[priceIndex].SubePriceValue == null /*|| Model.productCompairsList[i].SubeList[priceIndex].SubePriceValue == 0*/)
                                                            {
                                                                <td align="center"> <img src="~/img/noentry.png" /> </td>
                                                            }
                                                            else
                                                            {
                                                                <td class="yatay_@i dikey_@a">
                                                                    <a class="fa fa fa-arrows-h  btn btn-xs btn-primary btnyay" yatay="@i" dikey="@a" title="Girilen değeri yatay sütundaki tüm şubelerin fiyatına eşitler."> Yay </a>
                                                                    @Html.EditorFor(m => Model.productCompairsList[i].SubeList[priceIndex].SubePriceValue, new { htmlAttributes = new { @class = "form-control decimal_input" } })
                                                                </td>
                                                                @Html.HiddenFor(m => Model.productCompairsList[i].SubeList[priceIndex].SubePriceValue)
                                                            }
                                                        }
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                                <div class="col-md-offset-5 col-md-7">
                                    <button type="submit" value="Kaydet" class="btn btn-success">Seçim-2 Kaydet </button>
                                </div>
                            }
                            @*else
                                {
                                    <div class="alert alert-warning no-margin">Seçenek(2) bulunmamaktadır.</div>
                                }*@
                        </div>
                    }
                </fieldset>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    $('.btnyay').on('click', (ev) => {
        debugger;
        var self = $(ev.target);
        var yatay = self.attr("yatay");
        var dikey = self.attr("dikey");
        var editadi = `#productCompairsList_${dikey}__SubeList_${yatay}__SubePriceValue`;
        var value = self.parent().find('input').val();//$(editadi).val();
        $('.yatay_' + yatay).find('input').val(value);
    });


    $(document).ready(function () {

        // $('#tableChoice1').DataTable({
        // "pageLength": 100,
        // "bDestroy": true,
        // });
        //$('#tableOptions').DataTable({
        // "pageLength": 100,
        // "bDestroy": true,
        // });


        $('#tableChoice2 tbody td img').click(function () {
            debugger;
            var oTable = $('#tableChoice1').dataTable();
            var nTr = this.parentNode.parentNode;
            if (this.src.match('details_close')) {
                /* This row is already open - close it */
                this.src = "/img/details_open.jpg";
                oTable.fnClose(nTr);
            }
            else {
                /* Open this row */
                this.src = "/img/details_close.jpg";
                var subeid = $(this).attr("rel");
                localStorage.subeid = subeid;
                var dataurl = $(this).data("url");
                $.get(dataurl, function (details) {
                    oTable.fnOpen(nTr, details, 'details');
                });
            }
        });
    });

</script>


