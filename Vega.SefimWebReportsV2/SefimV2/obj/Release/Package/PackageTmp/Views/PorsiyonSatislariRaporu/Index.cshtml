
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPageReports.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" />
<style>
    .dataTables_wrapper {
        -webkit-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.58);
        -moz-box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.58);
        box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.58);
        padding: 10px
    }

    table tbody tr td:nth-child(2), table tbody tr td:nth-child(3), table tbody tr td:nth-child(4) {
        text-align: right
    }

    table tbody tr {
        cursor: pointer
    }

    table caption b {
        color: black
    }

    table caption button {
        float: right
    }
</style>

<div class="form-group">
    <div>
        <button id="btnToday" onclick="dateButtonClick(this)" class="btnToday btn btn-primary pull-left" type="button"><i class="glyphicon"></i>Bugün</button>
        <button id="btnYesterday" onclick="dateButtonClick(this)" class="btnYesterday btn btn-primary pull-left" type="button"><i class="glyphicon"></i>Dün</button>
        <button id="btnMonth" onclick="dateButtonClick(this)" class="btnMonth btn btn-primary pull-left" type="button"><i class="glyphicon"></i>Bu Ay</button>
    </div>
    <div style="float:left">
        <div class="controls" style="float:left">
            <div class="col-md-12 xdisplay_inputx form-group has-feedback">
                <input type="text" class="form-control has-feedback-left" id="dateGecerlilikTarihi" placeholder="Seçiniz" aria-describedby="inputSuccess2Status4">
                <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                <span id="inputSuccess2Status4" class="sr-only">(success)</span>
            </div>
        </div>
        <div class="controls" style="float:left">
            <div class="col-md-12 xdisplay_inputx form-group has-feedback">
                <input type="text" class="form-control has-feedback-left" id="dateBitisTarihi" placeholder="Seçiniz" aria-describedby="inputSuccess2Status5">
                <span class="fa fa-calendar-o form-control-feedback left" aria-hidden="true"></span>
                <span id="inputSuccess2Status5" class="sr-only">(success)</span>
            </div>
        </div>
        <a class="btn btn-primary btn-sm text-white" onclick="searchFunc()"><i class="fa fa-search"></i></a>

    </div>
    <div style="clear:both"></div>
</div>

<div class="row" id="tableDiv">

</div>


<script type="text/javascript">

    var KOD1 = "";
    var URUNADI = "";
    var SUBEADI = "";
    var TEKTRH = "";
    var PORSIYONTIPI = "";
    var minDate = undefined;
    var maxDate = undefined;

    function formatCurrency(currency) {
        var currency_symbol = "₺"
        var formattedOutput = new Intl.NumberFormat('tr-TR', {
            style: 'currency',
            currency: 'TRY',
            minimumFractionDigits: 2,
        });

        return formattedOutput.format(currency).replace(currency_symbol, '')
    }
    $(document).ready(function () {
        $("#loading").attr("style", "position: fixed;top:0");

        $("#loading").attr("class", "myloading-active");
        setTimeout(function () {
            $("#loading").attr("class", "myloading");
        }, 1500);

    });
    Date.prototype.addHours = function (hour) {
        var date = new Date(this.valueOf());
        date.setHours(date.getDate() + hour);
        return date;
    }
    function dateButtonClick(btn) {
        var theData = {
            btnID: btn.id
        }
        $.ajax({
            url: '/SatislarAnaliz/dateButtonClick',
            type: 'GET',
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                $("#dateGecerlilikTarihi").val(result.startDate)
                $("#dateBitisTarihi").val(result.endDate)
                searchFunc();
            }
        });
    }

    var index = 0;
    function isLoading() {

        index++;
        if (index == 6) {
            $("#loading").attr("class", "myloading");
            index = 0;
        }
    }

    function searchFunc() {
        $("#loading").attr("class", "myloading-active");
        var html = `
                    <div class="row">
                        <div class="col-md-6">
                               <div id="exTab2" >
                                    <ul class="nav nav-tabs">
                                        <li class="active">
                                            <a href="#1" data-toggle="tab">Şubeler Porsiyon Adetleri</a>
                                        </li>
                                        <li>
                                            <a href="#2" data-toggle="tab">Ürünler Listesi</a>
                                        </li>

                                    </ul>

                                    <div class="tab-content ">
                                        <div class="tab-pane active" id="1" style="overflow:auto">

                                                 <table class="table table-hover table-sm table-striped " style="width:100%" id="subelerPorsiyonAdetleri">
                                                    <caption><b>Şube Porsiyon Adetleri</b>

                                                            </caption>
                                                    <thead>
                                                       <tr><th>Şube Adı</th><th>Adetli Miktar</th><th>Kiloluk Miktar</th><th>Toplam</th><th>Tutar</th><th>Toplam Ciro</th><th>Ciroya Oranı</th><th>Toplama % (Miktar)</th</tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                 </table>
                                                 <br/><br/>
                                                 <div id="subelerPorsiyonAdetlerichart"></div>
                                        </div>
                                        <div class="tab-pane" id="2" style="overflow:auto">
                                                <table class="table table-hover table-sm table-striped " style="width:100%" id="urunListesi">
                                                    <caption><b>Ürünler Listesi</b>

                                                            </caption>
                                                    <thead>
                                                       <tr><th>Ürün</th><th>Miktar</th></tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                 </table>
                                        </div>

                                    </div>
                                </div>
                        </div>
                        <div class="col-md-6">
                              <div class="row">
                                  <div class="col-md-6">
                                                 <table class="table table-hover table-sm table-striped " style="width:100%" id="porsiyonTipineGore">
                                                    <caption><b>Porsiyon Tipine Göre</b>

                                                            </caption>
                                                    <thead>
                                                       <tr><th>Tip</th><th>Miktar</th><th>Tutar</th><th>Toplama % (Miktar)</th></tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                 </table>
                                  </div>
                                  <div class="col-md-6">
                                               <div id="porsiyonTipineGorechart"></div>
                                  </div>
                            </div>
                            <br/><br/>
                            <div class="row">
                                  <div class="col-md-6">
                                                 <table class="table table-hover table-sm table-striped " style="width:100%" id="donerCesidineGore">
                                                    <caption><b>Döner Çeşidine Göre</b>

                                                            </caption>
                                                    <thead>
                                                       <tr><th>Çeşit</th><th>Miktar</th><th>Tutar</th><th>Toplama % (Miktar)</th></tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                 </table>
                                  </div>
                                  <div class="col-md-6">
                                                <table class="table table-hover table-sm table-striped " style="width:100%" id="tariheGore">
                                                    <caption><b>Tarihe Göre</b>

                                                            </caption>
                                                    <thead>
                                                       <tr><th>Tarih</th><th>Miktar</th><th>Tutar</th></tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                 </table>
                                  </div>
                            </div>
                            <br/><br/>
                            <div id="saatlereGoreChart"></div>
                        </div>
                    </div>
                    <div class="col-md-12"><div id="chart-bar"></div></div>
                `;
        $("#tableDiv").html(html);
        searchFilterShow();
       
        timeChart();
        subelerPorsiyonAdetleri();
        donerCesidineGore();
        tariheGore();
        urunListesi();
        porsiyonTipineGore();
    }

    function searchFilterShow() {
        $("#donerCesidineGore caption").html("");
        $("#urunListesi caption").html("");
        $("#subelerPorsiyonAdetleri caption").html("");
        $("#tariheGore caption").html("");
        $("#porsiyonTipineGore caption").html("");

        if (KOD1 != "") {
            $("#donerCesidineGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="KOD1=''; searchFilterShow();">
                         Temizle <span class="badge badge-danger">x</span>
                         </button>
                 `);

            for (var i = 0; i < KOD1.split(',').length - 1; i++) {

                $("#donerCesidineGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="KOD1='`+ KOD1.split(KOD1.split(',')[i] + ",").join("") + `'; searchFilterShow();">
                         `+ KOD1.split(',')[i] + ` <span class="badge badge-danger">x</span>
                         </button>
                 `);

            }

          
        }
        if (URUNADI != "") {

            $("#urunListesi caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="URUNADI=''; searchFilterShow();">
                         Temizle <span class="badge badge-danger">x</span>
                         </button>
                 `);

            for (var i = 0; i < URUNADI.split(',').length - 1; i++) {

                $("#urunListesi caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="URUNADI='`+ URUNADI.split(URUNADI.split(',')[i] + ",").join("") + `'; searchFilterShow();">
                         `+ URUNADI.split(',')[i] + ` <span class="badge badge-danger">x</span>
                         </button>
                 `);

            }

          
        }

        if (SUBEADI != "") {
            $("#subelerPorsiyonAdetleri caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="SUBEADI=''; searchFilterShow();">
                         Temizle <span class="badge badge-danger">x</span>
                         </button>
                 `);

            for (var i = 0; i < SUBEADI.split(',').length - 1; i++) {

                $("#subelerPorsiyonAdetleri caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="SUBEADI='`+ SUBEADI.split(SUBEADI.split(',')[i] + ",").join("") + `'; searchFilterShow();">
                         `+ SUBEADI.split(',')[i] + ` <span class="badge badge-danger">x</span>
                         </button>
                 `);

            }

        }
        if (TEKTRH != "") {
            $("#tariheGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="TEKTRH=''; searchFilterShow();">
                         Temizle <span class="badge badge-danger">x</span>
                         </button>
                 `);

            for (var i = 0; i < TEKTRH.split(',').length - 1; i++) {

                $("#tariheGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="TEKTRH='`+ TEKTRH.split(TEKTRH.split(',')[i] + ",").join("") + `'; searchFilterShow();">
                         `+ TEKTRH.split(',')[i] + ` <span class="badge badge-danger">x</span>
                         </button>
                 `);

            }
         
        }
        if (PORSIYONTIPI != "") {
            $("#porsiyonTipineGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="PORSIYONTIPI=''; searchFilterShow();">
                         Temizle <span class="badge badge-danger">x</span>
                         </button>
                 `);
            console.log(PORSIYONTIPI);
            console.log(PORSIYONTIPI.split(',').length);
            for (var i = 0; i < PORSIYONTIPI.split(',').length - 1; i++) {

                $("#porsiyonTipineGore caption").append(`
                        <button type="button" class="btn btn-danger btn-sm" onclick="PORSIYONTIPI='`+ PORSIYONTIPI.split(PORSIYONTIPI.split(',')[i] + ",").join("") + `'; searchFilterShow();">
                         `+ PORSIYONTIPI.split(',')[i] + ` <span class="badge badge-danger">x</span>
                         </button>
                 `);

            }
           
        }

      
    }


    function generateDayWiseTimeSeries(baseval, count, yrange) {
        var i = 0;
        var series = [];
        while (i < count) {
            var x = baseval;
            var y =
                Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

            series.push([x, y]);
            if (i + 2 == count) {
                baseval += 3599999;
            } else {
                baseval += 3600000;
            }

            i++;
        }
        return series;
    }
    function enBuyukDegerFunc(array, saat) {
        array = array.filter(x => x.Saat == saat);
        if (array.length == 0) {

            return 0;
        } else {
            var enBuyuk = 0;
            for (var i = 0; i < array.length; i++) {
                if (parseFloat(array[i]["KilolukMiktar"]) + parseFloat(array[i]["AdetMiktar"]) > enBuyuk) {
                    enBuyuk = parseFloat(array[i]["KilolukMiktar"]) + parseFloat(array[i]["AdetMiktar"]);
                }
            }

            return enBuyuk;

        }
    }
    function timeChart() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $.ajax({
            url: '/PorsiyonSatislariRaporu/SaateGore',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {

                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var saateGoreSatislarArray = JSON.parse(data);
                var options = {
                    series: [{
                        name: 'Miktar',
                        data: []
                    }],
                    chart: {
                        height: 350,
                        type: 'bar',
                    },
                    plotOptions: {
                        bar: {
                            borderRadius: 0,
                            dataLabels: {
                                position: 'top', // top, center, bottom
                            },
                        }
                    },
                    dataLabels: {
                        enabled: false,
                        formatter: function (val) {
                            return "a";
                        },
                        offsetY: -20,
                        style: {
                            fontSize: '12px',
                            colors: ["#304758"]
                        }
                    },

                    xaxis: {
                        categories: [],
                        position: 'bottom',
                        axisBorder: {
                            show: false
                        },
                        axisTicks: {
                            show: false
                        },
                        crosshairs: {
                            fill: {
                                type: 'gradient',
                                gradient: {
                                    colorFrom: '#D8E3F0',
                                    colorTo: '#BED1E6',
                                    stops: [0, 100],
                                    opacityFrom: 0.4,
                                    opacityTo: 0.5,
                                }
                            }
                        },
                        tooltip: {
                            enabled: true,
                        }
                    },
                    yaxis: {
                        axisBorder: {
                            show: false
                        },
                        axisTicks: {
                            show: false,
                        },
                        labels: {
                            show: false,
                            formatter: function (val) {
                                return formatCurrency(val);
                            }
                        }

                    },
                    title: {
                        text: 'Saatlere Göre',

                        style: {
                            color: '#444'
                        }
                    }
                };

                var data = generateDayWiseTimeSeries(new Date("01 Jul 2017 03:00:00").getTime(), 25, {
                    min: 30,
                    max: 90
                });
                for (var i = 0; i < 25; i++) {

                    data[i][1] = enBuyukDegerFunc(saateGoreSatislarArray, i);
                    options.xaxis.categories.push(i.toString())
                    options.series[0].data.push(data[i][1])
                }
                var chart = new ApexCharts(document.querySelector("#saatlereGoreChart"), options);
                chart.render();

                var options2 = {
                    chart: {
                        id: "chart1",
                        height: 200,
                        type: "area",
                        foreColor: "#ccc",
                        brush: {
                            enabled: true
                        },
                        toolbar: {
                            show: true,
                            tools: {
                                download: false,
                                customIcons: [
                                    {
                                        icon: '<i class="fa-solid fa-bolt-lightning"></i>',
                                        index: 0,
                                        title: 'Çalıştır',
                                        class: 'custom-icon',
                                        click: function (chart, options, e) {

                                            searchFunc();
                                        }
                                    }, {
                                        icon: '<i class="fa-solid fa-trash"></i>',
                                        index: 0,
                                        title: 'Temizle',
                                        class: 'custom-icon',
                                        click: function (chart, options, e) {
                                            minDate = undefined;
                                            maxDate = undefined;
                                            searchFunc();
                                        }
                                    }
                                ]
                            }
                        },
                        events: {
                            selection: (e, o) => {

                                if (o.yaxis != null) {
                                    minDate = new Date(o.xaxis.min);
                                    maxDate = new Date(o.xaxis.max);
                                }


                            }
                        },
                        selection: {
                            enabled: true,
                            fill: {
                                color: "#fff",
                                opacity: 0.4
                            },
                            xaxis: {
                                min: new Date(minDate).getTime(),
                                max: new Date(maxDate).getTime()
                            }
                        },
                    },
                    colors: ["#00BAEC"],
                    series: [
                        {
                            data: data
                        }
                    ],
                    stroke: {
                        width: 1,
                        curve: 'smooth',
                    },
                    grid: {
                        borderColor: "#444",
                        yaxis: {
                            lines: {
                                show: false
                            }
                        }
                    },
                    markers: {
                        size: 0
                    },
                    xaxis: {
                        type: "datetime",
                        labels: {
                            show: true,
                        },
                        tooltip: {
                            enabled: false,
                        },
                        axisTicks: {
                            show: false
                        }
                    },
                    yaxis: {
                        show: false,
                        tickAmount: 2
                    },
                    title: {
                        text: '',
                        align: 'left'
                    },
                };
                if (minDate != undefined && minDate != "Invalid Date" && maxDate != undefined && maxDate != "Invalid Date") {
                    options2.title.text = new Date(minDate).addHours(-3).toLocaleTimeString() + " - " + new Date(maxDate).addHours(-3).toLocaleTimeString();

                }
                var chart2 = new ApexCharts(document.querySelector("#chart-bar"), options2);
                chart2.render();




            }
        });






    }


    function urunListesi() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $("#urunListesi tbody").html("");
        $.ajax({
            url: '/PorsiyonSatislariRaporu/UrunListesi',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {
                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                for (var i = 0; i < result.length; i++) {
                    $("#urunListesi tbody").append("<tr onclick=' URUNADI += \"" + result[i]["ProductName"] + ",\"; searchFilterShow();'><td>" + result[i]["ProductName"] + "</td><td class='text-right'>" + formatCurrency(result[i]["AdetMiktar"]) + "</td></tr>");
                }
                runDatatable("urunListesi");

            }
        });
    }
    function subelerPorsiyonAdetleri() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $("#subelerPorsiyonAdetleri tbody").html("");
        $.ajax({
            url: '/PorsiyonSatislariRaporu/SubelerPorsiyonAdetleri',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {
                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                for (var i = 0; i < result.length; i++) {
                    $("#subelerPorsiyonAdetleri tbody").append("<tr onclick=' SUBEADI += \"" + result[i]["SUBEADI"] + ",\"; searchFilterShow();'><td>" + result[i]["SUBEADI"] + "</td><td class='text-right'>" + formatCurrency(result[i]["AdetMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["KilolukMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(parseFloat(result[i]["AdetMiktar"]) + parseFloat(result[i]["KilolukMiktar"])) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["Tutar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["ToplamCiro"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["CiroOranOran"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["Toplam%Miktar"]) + "</td></tr>");
                }
                runDatatable("subelerPorsiyonAdetleri");


                var options = {
                    series: [
                        {
                            name: 'Porsiyon Tutar',
                            group: 'budget',
                            data: []
                        },
                        {
                            name: 'Diğer Tutar',
                            group: 'budget',
                            data: []
                        }
                    ],
                    chart: {
                        type: 'bar',
                        height: 350,
                        stacked: true,
                    },
                    stroke: {
                        width: 1,
                        colors: ['#fff']
                    },
                    dataLabels: {
                        formatter: (val) => {
                            return formatCurrency(val)
                        }
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false
                        }
                    },
                    xaxis: {
                        categories: [

                        ]
                    },
                    fill: {
                        opacity: 1
                    },
                    colors: ['#b08a43', '#92646f', '#80f1cb', '#00E396'],
                    yaxis: {
                        labels: {
                            formatter: (val) => {
                                return formatCurrency(val) + " TL"
                            }
                        }
                    },
                    legend: {
                        position: 'top',
                        horizontalAlign: 'left'
                    }
                };

                for (var i = 0; i < result.length; i++) {
                    options.xaxis.categories.push(result[i]["SUBEADI"])
                    options.series[0].data.push(result[i]["Tutar"])
                    options.series[1].data.push(parseFloat(result[i]["ToplamCiro"]) - parseFloat(result[i]["Tutar"]))
                }
                var chart = new ApexCharts(document.querySelector("#subelerPorsiyonAdetlerichart"), options);
                chart.render();






            }
        });
    }

    function tariheGore() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $("#tariheGore tbody").html("");
        $.ajax({
            url: '/PorsiyonSatislariRaporu/TariheGore',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {
                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                for (var i = 0; i < result.length; i++) {
                    $("#tariheGore tbody").append("<tr onclick=' TEKTRH = \"" + result[i]["Tarih"] + ",\"; searchFilterShow();'><td>" + result[i]["Tarih"] + "</td><td class='text-right'>" + formatCurrency(result[i]["AdetMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["TUTAR"]) + "</td></tr>");
                }
                runDatatable("tariheGore");

            }
        });
    }
    function donerCesidineGore() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $("#donerCesidineGore tbody").html("");
        $.ajax({
            url: '/PorsiyonSatislariRaporu/DonerCesidineGore',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {
                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                for (var i = 0; i < result.length; i++) {
                    $("#donerCesidineGore tbody").append("<tr onclick=' KOD1 += \"" + result[i]["KOD1"] + ",\"; searchFilterShow();'><td>" + result[i]["KOD1"] + "</td><td class='text-right'>" + formatCurrency(result[i]["AdetMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["TUTAR"]) + "</td><td class='text-right'>" + "% " + formatCurrency(result[i]["Oran"]) + "</td></tr>");
                }
                runDatatable("donerCesidineGore");

            }
        });
    }
    function porsiyonTipineGore() {
        var theData = {
            StartDate: $("#dateGecerlilikTarihi").val(),
            EndDate: $("#dateBitisTarihi").val(),
            KOD1: KOD1,
            URUNADI: URUNADI,
            TEKTRH: TEKTRH,
            SUBEADI: SUBEADI,
            PORSIYONTIPI: PORSIYONTIPI,
            MinDate: (minDate == "Invalid Date" || minDate == undefined) ? "Invalid Date" : new Date(minDate).toISOString(),
            MaxDate: (maxDate == "Invalid Date" || maxDate == undefined) ? "Invalid Date" : new Date(maxDate).toISOString(),
        }
        $("#porsiyonTipineGore tbody").html("");
        $.ajax({
            url: '/PorsiyonSatislariRaporu/PorsiyonTipineGore',
            type: 'GET',
            beforeSend: function (request) {

            },
            complete: function (data) {
                isLoading()
            },
            dataType: 'text',
            data: theData,
            success: function (data) {
                var result = JSON.parse(data);
                for (var i = 0; i < result.length; i++) {
                    if (PORSIYONTIPI !='Kiloluk Porsiyon')
                        $("#porsiyonTipineGore tbody").append("<tr onclick=' PORSIYONTIPI = \"Adetli Porsiyon,\"; searchFilterShow();'><td>Adetli Porsiyon</td><td class='text-right'>" + formatCurrency(result[i]["AdetMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["AdetTutar"]) + "</td><td class='text-right'>" + "% " + formatCurrency(result[i]["Toplam%MiktarAdet"]) + "</td></tr>");

                    if (PORSIYONTIPI != 'Adetli Porsiyon')
                        $("#porsiyonTipineGore tbody").append("<tr onclick=' PORSIYONTIPI = \"Kiloluk Porsiyon,\"; searchFilterShow();'><td>Kiloluk Porsiyon</td><td class='text-right'>" + formatCurrency(result[i]["KilolukMiktar"]) + "</td><td class='text-right'>" + " " + formatCurrency(result[i]["KgTutar"]) + "</td><td class='text-right'>" + "% " + formatCurrency(result[i]["Toplam%MiktarKiloluk"]) + "</td></tr>");
                }
                runDatatable("porsiyonTipineGore");

                var options = {
                    series: [parseFloat(result[0]["Toplam%MiktarAdet"]), parseFloat(result[0]["Toplam%MiktarKiloluk"])],
                    chart: {
                        width: 300,
                        type: 'pie',
                    },
                    title: {
                        text: "Porsiyon Tipine Göre"
                    },
                    labels: ['Adetli Porsiyon', 'Kiloluk Porsiyon'],
                    dataLabels: {
                        formatter(val, opts) {
                            const name = opts.w.globals.labels[opts.seriesIndex]
                            const seri = formatCurrency(opts.w.globals.series[opts.seriesIndex])
                            return [name, seri, val.toFixed(2) + '%']
                        }
                    },
                    responsive: [{
                        breakpoint: 480,
                        options: {
                            chart: {
                                width: 200
                            },
                            legend: {
                                position: 'bottom'
                            }
                        }
                    }]
                };
                var chart = new ApexCharts(document.querySelector("#porsiyonTipineGorechart"), options);
                chart.render();

            }
        });
    }




</script>

<script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>